docker/gotest.Dockerfilesudo: required

language: bash
env:
  DOCKER_COMPOSE_VERSION: 1.9.0

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - cp .env.test .env


services:
  - docker

script:
  - docker login -u="$DOCKER_USER" -p="$DOCKER_PWD" $DOCKER_REGISTRY
  - docker build -t go_base -f docker/go_base.Dockerfile .;
  - docker build -t popcube-docs -f docker/docs.Dockerfile .;
  - docker-compose -f docker-compose.test.yml up --build;

after_success:
  - >-
    if [ "$TRAVIS_BRANCH" == "master" ]; then
    docker login -u="$DOCKER_USER" -p="$DOCKER_PWD" $DOCKER_REGISTRY;
    docker build -t go_base -f docker/go_base.Dockerfile .;
    docker tag go_base $DOCKER_REGISTRY/go:base;
    docker push $DOCKER_REGISTRY/go:base;
    docker tag go_base $DOCKER_REGISTRY/popcubeapi:latest;
    docker push $DOCKER_REGISTRY/popcubeapi:latest;
    docker build -t $DOCKER_REGISTRY/popcubeapidocs:latest -f docker/docs.Dockerfile .;
    docker push $DOCKER_REGISTRY/popcubeapidocs:latest;
    curl -X POST --header 'Content-Type: application/json' --header "X-AUTH-TOKEN: ${DEPLOY_TOKEN}" -d '{ "Image": "registry.le-corre.eu:5000/popcubeapi:latest", "Env": [ "VIRTUAL_NETWORK=nginx-proxy", "LETSENCRYPT_HOST=api.popcube.xyz", "LETSENCRYPT_EMAIL=clement@popcube.xyz", "VIRTUAL_HOST=api.popcube.xyz", "VIRTUAL_PORT=8080" ], "Hostname": "popcube_api" }' http://${DEPLOY_URL}/deploy;
    curl -X POST --header 'Content-Type: application/json' --header "X-AUTH-TOKEN: ${DEPLOY_TOKEN}" -d '{ "Image": "registry.le-corre.eu:5000/popcubeapidocs:latest", "Env": [ "VIRTUAL_NETWORK=nginx-proxy", "LETSENCRYPT_HOST=master.popcube.xyz", "LETSENCRYPT_EMAIL=clement@popcube.xyz", "VIRTUAL_HOST=docs.popcube.xyz" ], "Hostname": "docs" }' http://${DEPLOY_URL}/deploy;
    fi
  - >-
    if [ "$TRAVIS_BRANCH" == "development" ]; then
    docker login -u="$DOCKER_USER" -p="$DOCKER_PWD" $DOCKER_REGISTRY;
    docker build -t go_base -f docker/go_base.Dockerfile .;
    docker tag go_base $DOCKER_REGISTRY/go:base-dev;
    docker push $DOCKER_REGISTRY/go:base-dev;
    docker build -t nginx_front -f docker/nginx_front.Dockerfile .;
    docker tag go_base $DOCKER_REGISTRY/popcubeapi:dev;
    docker push $DOCKER_REGISTRY/popcubeapi:dev;
    docker build -t $DOCKER_REGISTRY/popcubeapidocs:dev -f docker/docs.Dockerfile .;
    docker push $DOCKER_REGISTRY/popcubeapidocs:dev;
    curl -X POST --header 'Content-Type: application/json' --header "X-AUTH-TOKEN: ${DEPLOY_TOKEN}" -d '{ "Image": "registry.le-corre.eu:5000/popcubeapi:dev", "Env": [ "VIRTUAL_NETWORK=nginx-proxy", "LETSENCRYPT_HOST=api-dev.popcube.xyz", "LETSENCRYPT_EMAIL=clement@popcube.xyz", "VIRTUAL_HOST=api-dev.popcube.xyz", "VIRTUAL_PORT=8080" ], "Hostname": "popcube_api_dev" }' http://${DEPLOY_URL}/deploy;
    curl -X POST --header 'Content-Type: application/json' --header "X-AUTH-TOKEN: ${DEPLOY_TOKEN}" -d '{ "Image": "registry.le-corre.eu:5000/popcubeapidocs:dev", "Env": [ "VIRTUAL_HOST=docs-dev.popcube.xyz" ], "Hostname": "docs-dev" }' http://${DEPLOY_URL}/deploy;
    fi

notifications:
  slack: societyco:T1mHeYKrOtopvRjIZ68MqOQo
