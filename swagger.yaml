---
swagger: "2.0"
info:
  description: "The inner API of Popcube aim to define every methods need to manage\
    \ communication organisation inside PopCube chat project"
  version: "alpha"
  title: "Popcube iner API"
  contact:
    name: "Titouan Freville"
    email: "titouanfreville@gmail.com"
host: "api.popcube"
basePath: "/alpha"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /:
    get:
      tags:
      - "Test"
      description: "Hello World"
      operationId: "getter"
      parameters: []
      responses:
        default:
          description: "genericError general error when unexpected errors occured"
          schema:
            $ref: "#/definitions/genericErrorModel"
  /avatar:
    get:
      tags:
      - "Avatars"
      summary: "Get avatars"
      description: "This will get all the avatars available in the organisation."
      operationId: "getAllAvatar"
      parameters: []
      responses:
        200:
          description: "avatarSlice Array of avatars"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Avatar"
        503:
          description: "databaseError is an error object to tell what is happening\
            \ when we encounter issue with database"
          schema:
            $ref: "#/definitions/genericErrorModel"
        default:
          description: "genericError general error when unexpected errors occured"
          schema:
            $ref: "#/definitions/genericErrorModel"
    post:
      tags:
      - "Avatars"
      summary: "New avatar"
      description: "This will create an avatar for organisation avatars library."
      operationId: "newAvatar"
      parameters:
      - in: "body"
        name: "avatar"
        description: "Link of the avatar in server."
        required: false
        schema:
          $ref: "#/definitions/Avatar"
        x-go-name: "Avatar"
      responses:
        200:
          description: "avatarObjectSuccess list of avatars"
          schema:
            $ref: "#/definitions/Avatar"
        503:
          description: "databaseError is an error object to tell what is happening\
            \ when we encounter issue with database"
          schema:
            $ref: "#/definitions/genericErrorModel"
        default:
          description: "genericError general error when unexpected errors occured"
          schema:
            $ref: "#/definitions/genericErrorModel"
  /avatar/all:
    get:
      tags:
      - "Avatars"
      summary: "Get avatars"
      description: "This will get all the avatars available in the organisation."
      operationId: "getAllAvatar"
      parameters: []
      responses:
        200:
          description: "avatarSlice Array of avatars"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Avatar"
        503:
          description: "databaseError is an error object to tell what is happening\
            \ when we encounter issue with database"
          schema:
            $ref: "#/definitions/genericErrorModel"
        default:
          description: "genericError general error when unexpected errors occured"
          schema:
            $ref: "#/definitions/genericErrorModel"
  /avatar/link/:avatarLink:
    get:
      tags:
      - "Avatars"
      summary: "Get avatar from link"
      description: "This will return the avatar object corresponding to provided link"
      operationId: "getAvatarFromLink"
      parameters:
      - name: "avatarLink"
        in: "path"
        description: "Link of the avatar in server."
        required: true
        type: "string"
        x-go-name: "AvatarLink"
      responses:
        200:
          description: "avatarObjectSuccess list of avatars"
          schema:
            $ref: "#/definitions/Avatar"
        503:
          description: "databaseError is an error object to tell what is happening\
            \ when we encounter issue with database"
          schema:
            $ref: "#/definitions/genericErrorModel"
        default:
          description: "genericError general error when unexpected errors occured"
          schema:
            $ref: "#/definitions/genericErrorModel"
  /avatar/new:
    post:
      tags:
      - "Avatars"
      summary: "New avatar"
      description: "This will create an avatar for organisation avatars library."
      operationId: "newAvatar"
      parameters:
      - in: "body"
        name: "avatar"
        description: "Link of the avatar in server."
        required: false
        schema:
          $ref: "#/definitions/Avatar"
        x-go-name: "Avatar"
      responses:
        200:
          description: "avatarObjectSuccess list of avatars"
          schema:
            $ref: "#/definitions/Avatar"
        503:
          description: "databaseError is an error object to tell what is happening\
            \ when we encounter issue with database"
          schema:
            $ref: "#/definitions/genericErrorModel"
        default:
          description: "genericError general error when unexpected errors occured"
          schema:
            $ref: "#/definitions/genericErrorModel"
  /panic:
    get:
      tags:
      - "Test"
      summary: "Should result in 500"
      description: "Test panic cautching"
      operationId: "getter"
      parameters: []
      responses:
        default:
          description: "genericError general error when unexpected errors occured"
          schema:
            $ref: "#/definitions/genericErrorModel"
  /ping:
    get:
      tags:
      - "Test"
      summary: "Pong"
      description: "Test api ping"
      operationId: "getter"
      parameters: []
      responses:
        default:
          description: "genericError general error when unexpected errors occured"
          schema:
            $ref: "#/definitions/genericErrorModel"
definitions:
  Avatar:
    type: "object"
    required:
    - "link"
    - "name"
    properties:
      id:
        type: "integer"
        format: "uint64"
        description: "id of the avatar"
        minimum: 0.0
        x-go-name: "IDAvatar"
      link:
        type: "string"
        description: "Path into server"
        x-go-name: "Link"
      name:
        type: "string"
        description: "Avatar name"
        x-go-name: "Name"
    title: "Avatar object"
    description: "Avatar object store default avatar images you can use within an\
      \ association.\nRequired apply only for creation of the object. Id is required\
      \ only on update."
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  Channel:
    type: "object"
    required:
    - "name"
    properties:
      avatar:
        type: "string"
        description: "Photo :O"
        x-go-name: "Avatar"
      description:
        type: "string"
        description: "Describe the channel$\nmax lenght: 1024"
        x-go-name: "Description"
      id:
        type: "integer"
        format: "uint64"
        description: "id of the channel"
        minimum: 0.0
        x-go-name: "IDChannel"
      last_update:
        type: "integer"
        format: "int64"
        description: "Last time channel information where updated"
        x-go-name: "LastUpdate"
      name:
        type: "string"
        x-go-name: "ChannelName"
      private:
        type: "boolean"
        description: "Channel is private ?"
        x-go-name: "Private"
      subject:
        type: "string"
        description: "What we are speaking about\nmax lenght: 250"
        x-go-name: "Subject"
      type:
        type: "string"
        description: "Set if channel is text, video, audio or direct"
        x-go-name: "Type"
      web_id:
        type: "string"
        description: "web id for the user used only for cache and cookie purpose"
        x-go-name: "WebID"
    title: "Channel object."
    description: "Channel is the place where user can speak.\nRequired apply only\
      \ for creation of the object."
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  Emoji:
    type: "object"
    required:
    - "link"
    - "name"
    - "shortcut"
    properties:
      id:
        type: "integer"
        format: "uint64"
        description: "id of the emoji"
        minimum: 0.0
        x-go-name: "IDEmoji"
      link:
        type: "string"
        description: "path to emoji into server"
        x-go-name: "Link"
      name:
        type: "string"
        maxLength: 64
        x-go-name: "Name"
      shortcut:
        type: "string"
        maxLength: 20
        x-go-name: "Shortcut"
    title: "Emoji object."
    description: "Emoji object describe the emoji available in the organisation and\
      \ theire shortcuts.\nRequired apply only for creation of the object."
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  Folder:
    type: "object"
    required:
    - "id_message"
    - "link"
    - "name"
    - "type"
    properties:
      id:
        type: "integer"
        format: "uint64"
        description: "id of the folder"
        minimum: 0.0
        x-go-name: "IDFolder"
      id_message:
        type: "integer"
        format: "uint64"
        description: "id of the message folder is in"
        x-go-name: "IDMessage"
      link:
        type: "string"
        description: "path to the folder in the server"
        x-go-name: "Link"
      name:
        type: "string"
        description: "folder name"
        x-go-name: "Name"
      type:
        type: "string"
        description: "type if the folder (extension, snippet)"
        x-go-name: "Type"
    title: "Folder object"
    description: "A folder is a file larger than a simple message."
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  Member:
    type: "object"
    required:
    - "id_channel"
    - "id_user"
    properties:
      id_channel:
        type: "integer"
        format: "uint64"
        x-go-name: "IDChannel"
      id_role:
        type: "integer"
        format: "uint64"
        x-go-name: "IDRole"
      id_user:
        type: "integer"
        format: "uint64"
        x-go-name: "IDUser"
    title: "Member object."
    description: "Member is the link between an User and a Channel. It also state\
      \ the role of the user\nin the channel if it is channel specific."
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  Message:
    type: "object"
    required:
    - "date"
    - "id_channel"
    - "id_user"
    properties:
      content:
        type: "string"
        description: "Content of the message"
        x-go-name: "Content"
      date:
        type: "integer"
        format: "int64"
        description: "Date the message was sent at"
        x-go-name: "Date"
      id:
        type: "integer"
        format: "uint64"
        description: "id of the message"
        minimum: 0.0
        x-go-name: "IDMessage"
      id_channel:
        type: "integer"
        format: "uint64"
        description: "Channel reference id"
        x-go-name: "IDChannel"
      id_user:
        type: "integer"
        format: "uint64"
        description: "User reference id"
        x-go-name: "IDUser"
    title: "Message object"
    description: "Message informations and content"
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  Organisation:
    type: "object"
    required:
    - "docker_stack"
    - "name"
    properties:
      avatar:
        type: "string"
        x-go-name: "Avatar"
      description:
        type: "string"
        x-go-name: "Description"
      docker_stack:
        type: "integer"
        format: "int64"
        description: "Stack into docker swarm"
        minimum: 0.0
        x-go-name: "DockerStack"
      domain:
        type: "string"
        description: "Domain name of the organisation"
        x-go-name: "Domain"
      id:
        type: "integer"
        format: "uint64"
        description: "id of the organisation"
        minimum: 0.0
        x-go-name: "IDOrganisation"
      name:
        type: "string"
        x-go-name: "OrganisationName"
    title: "Organisation object"
    description: "Describe organisation you are in. It is an unique object in the\
      \ database."
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  Parameter:
    type: "object"
    required:
    - "local"
    - "sleep_end"
    - "sleep_start"
    - "time_zone"
    properties:
      id:
        type: "integer"
        format: "uint64"
        description: "id of the parameter"
        minimum: 0.0
        x-go-name: "IDParameter"
      local:
        type: "string"
        description: "Default langage"
        x-go-name: "Local"
      sleep_end:
        type: "integer"
        format: "int64"
        description: "Default end of non notification period"
        x-go-name: "SleepEnd"
      sleep_start:
        type: "integer"
        format: "int64"
        description: "Default start of non notification period"
        x-go-name: "SleepStart"
      time_zone:
        type: "string"
        description: "Default time zone"
        x-go-name: "TimeZone"
    title: "Parameter object"
    description: "Global parameters to apply within organisation. unique object in\
      \ database"
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  Role:
    type: "object"
    required:
    - "can_archive"
    - "can_invite"
    - "can_manage"
    - "can_manage_user"
    - "can_moderate"
    - "can_use_private"
    - "name"
    properties:
      can_archive:
        type: "boolean"
        description: "User can archive channels"
        x-go-name: "CanArchive"
      can_invite:
        type: "boolean"
        description: "User can invite others to private channel or organisation"
        x-go-name: "CanInvite"
      can_manage:
        type: "boolean"
        description: "User can manage organisation/channel parameters and data"
        x-go-name: "CanManage"
      can_manage_user:
        type: "boolean"
        description: "User can manage other organisation/channel user"
        x-go-name: "CanManageUser"
      can_moderate:
        type: "boolean"
        description: "User can moderate channels"
        x-go-name: "CanModerate"
      can_use_private:
        type: "boolean"
        description: "User can use private channel"
        x-go-name: "CanUsePrivate"
      id:
        type: "integer"
        format: "uint64"
        description: "id of the role"
        minimum: 0.0
        x-go-name: "IDRole"
      name:
        type: "string"
        x-go-name: "RoleName"
    title: "Role object"
    description: "Decribe rights linked to role"
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  User:
    type: "object"
    required:
    - "deleted"
    - "email"
    - "email_verified"
    - "failed_attempts"
    - "id_role"
    - "last_password_update"
    - "locale"
    - "password"
    - "username"
    properties:
      avatar:
        type: "string"
        description: "Avatar\_used by user"
        x-go-name: "Avatar"
      deleted:
        type: "boolean"
        description: "User is deleted from organisation but still in database"
        x-go-name: "Deleted"
      email:
        type: "string"
        description: "User email"
        x-go-name: "Email"
      email_verified:
        type: "boolean"
        description: "State if email was verified"
        x-go-name: "EmailVerified"
      failed_attempts:
        type: "integer"
        format: "int64"
        description: "Number of attemps failed while loging in"
        x-go-name: "FailedAttempts"
      first_name:
        type: "string"
        description: "First name"
        x-go-name: "FirstName"
      id:
        type: "integer"
        format: "uint64"
        description: "id of the user"
        minimum: 0.0
        x-go-name: "IDUser"
      id_role:
        type: "integer"
        format: "uint64"
        description: "Role key of user in the organisation"
        x-go-name: "IDRole"
      last_activity_at:
        type: "integer"
        format: "int64"
        x-go-name: "LastActivityAt"
      last_name:
        type: "string"
        description: "User Lastname"
        x-go-name: "LastName"
      last_password_update:
        type: "integer"
        format: "int64"
        description: "Date of the last update of password from user"
        x-go-name: "LastPasswordUpdate"
      last_update:
        type: "integer"
        format: "int64"
        description: "Date of the last update from user"
        x-go-name: "LastUpdate"
      locale:
        type: "string"
        description: "User langage"
        x-go-name: "Locale"
      nickname:
        type: "string"
        description: "User nickname"
        x-go-name: "NickName"
      password:
        type: "string"
        description: "Encrypted user password"
        x-go-name: "Password"
      username:
        type: "string"
        description: "User name"
        maxLength: 64
        x-go-name: "Username"
      web_id:
        type: "string"
        description: "web id for the user used only for cache and cookie purpose"
        x-go-name: "WebID"
    title: "User object."
    description: "An user is an account who have an access to a specific organisation.\
      \ Each user is unique inside a given organisation, but users are not shared\
      \ between\norganisations. Required apply only for creation of the object."
    x-go-package: "github.com/titouanfreville/popcubeapi/models"
  databaseError:
    type: "object"
    properties:
      Error:
        description: "in:body"
        $ref: "#/definitions/genericErrorModel"
    description: "databaseError is an error object to tell what is happening when\
      \ we encounter issue with database"
    x-go-package: "github.com/titouanfreville/popcubeapi/api"
  deleteMessage:
    type: "object"
    properties:
      Message:
        description: "in:body"
        $ref: "#/definitions/deleteMessageModel"
    title: "deleteMessage return object to confirm correct deletion of an item."
    x-go-package: "github.com/titouanfreville/popcubeapi/api"
  deleteMessageModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "More information about why is it or isn't it removed"
        x-go-name: "Message"
      removed_object:
        type: "object"
        description: "The object we where trying to remove"
        properties: {}
        x-go-name: "Object"
      status:
        type: "integer"
        format: "int64"
        description: "Status"
        x-go-name: "Status"
      success:
        type: "boolean"
        description: "Correctly removed ?"
        x-go-name: "Success"
    title: "deleteMessageModel is an object to confirm correct deletion of an item."
    x-go-package: "github.com/titouanfreville/popcubeapi/api"
  generalOk:
    type: "object"
    properties:
      message:
        type: "string"
        description: "What you want to say\nin:body"
        x-go-name: "Message"
    description: "generalOk default object style to return if correct"
    x-go-package: "github.com/titouanfreville/popcubeapi/api"
  genericError:
    type: "object"
    properties:
      Error:
        description: "in:body"
        $ref: "#/definitions/genericErrorModel"
    description: "genericError general error when unexpected errors occured"
    x-go-package: "github.com/titouanfreville/popcubeapi/api"
  genericErrorModel:
    type: "object"
    properties:
      detailed_error:
        type: "string"
        description: "Detail of error"
        x-go-name: "DetailedError"
      id:
        type: "string"
        description: "ID for the error"
        x-go-name: "ID"
      is_oauth:
        type: "boolean"
        x-go-name: "IsOAuth"
      message:
        type: "string"
        description: "Error's message"
        x-go-name: "Message"
      request_id:
        type: "string"
        description: "Id of the request if exist"
        x-go-name: "RequestID"
      status_code:
        type: "integer"
        format: "int64"
        description: "EgenericErrorModelrror's status code"
        x-go-name: "StatusCode"
    title: "AppError Type used to structure error reporting for popcube chat project."
    x-go-name: "AppError"
    x-go-package: "github.com/titouanfreville/popcubeapi/utils"
  wrongEntityError:
    type: "object"
    properties:
      Error:
        description: "in:body"
        $ref: "#/definitions/genericErrorModel"
    description: "wrongEntityError is an error object to inform that the provided\
      \ object was not correctly formated"
    x-go-package: "github.com/titouanfreville/popcubeapi/api"
responses:
  avatarArraySuccess:
    description: "avatarSlice Array of avatars"
    schema:
      type: "array"
      items:
        $ref: "#/definitions/Avatar"
  avatarObjectSuccess:
    description: "avatarObjectSuccess list of avatars"
    schema:
      $ref: "#/definitions/Avatar"
  databaseError:
    description: "databaseError is an error object to tell what is happening when\
      \ we encounter issue with database"
    schema:
      $ref: "#/definitions/genericErrorModel"
  defaultOk:
    description: "generalOk default object style to return if correct"
  genericError:
    description: "genericError general error when unexpected errors occured"
    schema:
      $ref: "#/definitions/genericErrorModel"
  wrongEntity:
    description: "wrongEntityError is an error object to inform that the provided\
      \ object was not correctly formated"
    schema:
      $ref: "#/definitions/genericErrorModel"
