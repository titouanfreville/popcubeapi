{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The inner API of Popcube aim to define every methods need to manage communication organisation inside PopCube chat project",
    "title": "Popcube iner API",
    "contact": {
      "name": "Titouan Freville",
      "email": "titouanfreville@gmail.com"
    },
    "version": "alpha"
  },
  "host": "api.popcube",
  "basePath": "/alpha",
  "paths": {
    "/": {
      "get": {
        "description": "Hello World",
        "tags": [
          "Test"
        ],
        "operationId": "getter",
        "responses": {
          "200": {
            "$ref": "#/responses/%2Asuccess%2A"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/avatar": {
      "get": {
        "description": "This will get all the avatars available in the organisation.",
        "summary": "Get avatars",
        "operationId": "Avatars",
        "responses": {
          "200": {
            "$ref": "#/responses/avatarArraySuccess"
          },
          "503": {
            "$ref": "#/responses/genericError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      },
      "post": {
        "description": "This will create an avatar for organisation avatars library.",
        "summary": "New avatar",
        "operationId": "Avatars",
        "responses": {
          "200": {
            "$ref": "#/responses/avatarObjectSuccess"
          },
          "503": {
            "$ref": "#/responses/genericError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/avatar/all": {
      "get": {
        "description": "This will get all the avatars available in the organisation.",
        "summary": "Get avatars",
        "operationId": "Avatars",
        "responses": {
          "200": {
            "$ref": "#/responses/avatarArraySuccess"
          },
          "503": {
            "$ref": "#/responses/genericError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/avatar/new": {
      "post": {
        "description": "This will create an avatar for organisation avatars library.",
        "summary": "New avatar",
        "operationId": "Avatars",
        "responses": {
          "200": {
            "$ref": "#/responses/avatarObjectSuccess"
          },
          "503": {
            "$ref": "#/responses/genericError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/panic": {
      "get": {
        "description": "Test panic cautching",
        "tags": [
          "Test"
        ],
        "summary": "Should result in 500",
        "operationId": "getter",
        "responses": {
          "500": {
            "$ref": "#/responses/%2Asuccess%2A"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "description": "Test api ping",
        "tags": [
          "Test"
        ],
        "summary": "Pong",
        "operationId": "getter",
        "responses": {
          "200": {
            "$ref": "#/responses/%2Asuccess%2A"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    }
  },
  "definitions": {
    "Avatar": {
      "description": "Avatar object store default avatar images you can use within an association.\nRequired apply only for creation of the object. Id is required only on update.",
      "type": "object",
      "title": "Avatar object",
      "required": [
        "name",
        "link"
      ],
      "properties": {
        "id": {
          "description": "id of the avatar",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDAvatar"
        },
        "link": {
          "description": "Path into server",
          "type": "string",
          "x-go-name": "Link"
        },
        "name": {
          "description": "Avatar name",
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "Channel": {
      "description": "Channel is the place where user can speak.\nRequired apply only for creation of the object.",
      "type": "object",
      "title": "Channel object.",
      "required": [
        "name"
      ],
      "properties": {
        "avatar": {
          "description": "Photo :O",
          "type": "string",
          "x-go-name": "Avatar"
        },
        "description": {
          "description": "Describe the channel$\nmax lenght: 1024",
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "description": "id of the channel",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDChannel"
        },
        "last_update": {
          "description": "Last time channel information where updated",
          "type": "integer",
          "format": "int64",
          "x-go-name": "LastUpdate"
        },
        "name": {
          "type": "string",
          "x-go-name": "ChannelName"
        },
        "private": {
          "description": "Channel is private ?",
          "type": "boolean",
          "x-go-name": "Private"
        },
        "subject": {
          "description": "What we are speaking about\nmax lenght: 250",
          "type": "string",
          "x-go-name": "Subject"
        },
        "type": {
          "description": "Set if channel is text, video, audio or direct",
          "type": "string",
          "x-go-name": "Type"
        },
        "web_id": {
          "description": "web id for the user used only for cache and cookie purpose",
          "type": "string",
          "x-go-name": "WebID"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "Emoji": {
      "description": "Emoji object describe the emoji available in the organisation and theire shortcuts.\nRequired apply only for creation of the object.",
      "type": "object",
      "title": "Emoji object.",
      "required": [
        "name",
        "shortcut",
        "link"
      ],
      "properties": {
        "id": {
          "description": "id of the emoji",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDEmoji"
        },
        "link": {
          "description": "path to emoji into server",
          "type": "string",
          "x-go-name": "Link"
        },
        "name": {
          "type": "string",
          "maxLength": 64,
          "x-go-name": "Name"
        },
        "shortcut": {
          "type": "string",
          "maxLength": 20,
          "x-go-name": "Shortcut"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "Folder": {
      "description": "A folder is a file larger than a simple message.",
      "type": "object",
      "title": "Folder object",
      "required": [
        "link",
        "name",
        "type",
        "id_message"
      ],
      "properties": {
        "id": {
          "description": "id of the folder",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDFolder"
        },
        "id_message": {
          "description": "id of the message folder is in",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "IDMessage"
        },
        "link": {
          "description": "path to the folder in the server",
          "type": "string",
          "x-go-name": "Link"
        },
        "name": {
          "description": "folder name",
          "type": "string",
          "x-go-name": "Name"
        },
        "type": {
          "description": "type if the folder (extension, snippet)",
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "Member": {
      "description": "Member is the link between an User and a Channel. It also state the role of the user\nin the channel if it is channel specific.",
      "type": "object",
      "title": "Member object.",
      "required": [
        "id_user",
        "id_channel"
      ],
      "properties": {
        "id_channel": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "IDChannel"
        },
        "id_role": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "IDRole"
        },
        "id_user": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "IDUser"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "Message": {
      "description": "Message informations and content",
      "type": "object",
      "title": "Message object",
      "required": [
        "date",
        "id_user",
        "id_channel"
      ],
      "properties": {
        "content": {
          "description": "Content of the message",
          "type": "string",
          "x-go-name": "Content"
        },
        "date": {
          "description": "Date the message was sent at",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Date"
        },
        "id": {
          "description": "id of the message",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDMessage"
        },
        "id_channel": {
          "description": "Channel reference id",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "IDChannel"
        },
        "id_user": {
          "description": "User reference id",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "IDUser"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "Organisation": {
      "description": "Describe organisation you are in. It is an unique object in the database.",
      "type": "object",
      "title": "Organisation object",
      "required": [
        "docker_stack",
        "name"
      ],
      "properties": {
        "avatar": {
          "type": "string",
          "x-go-name": "Avatar"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "docker_stack": {
          "description": "Stack into docker swarm",
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "x-go-name": "DockerStack"
        },
        "domain": {
          "description": "Domain name of the organisation",
          "type": "string",
          "x-go-name": "Domain"
        },
        "id": {
          "description": "id of the organisation",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDOrganisation"
        },
        "name": {
          "type": "string",
          "x-go-name": "OrganisationName"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "Parameter": {
      "description": "Global parameters to apply within organisation. unique object in database",
      "type": "object",
      "title": "Parameter object",
      "required": [
        "local",
        "time_zone",
        "sleep_start",
        "sleep_end"
      ],
      "properties": {
        "id": {
          "description": "id of the parameter",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDParameter"
        },
        "local": {
          "description": "Default langage",
          "type": "string",
          "x-go-name": "Local"
        },
        "sleep_end": {
          "description": "Default end of non notification period",
          "type": "integer",
          "format": "int64",
          "x-go-name": "SleepEnd"
        },
        "sleep_start": {
          "description": "Default start of non notification period",
          "type": "integer",
          "format": "int64",
          "x-go-name": "SleepStart"
        },
        "time_zone": {
          "description": "Default time zone",
          "type": "string",
          "x-go-name": "TimeZone"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "Role": {
      "description": "Decribe rights linked to role",
      "type": "object",
      "title": "Role object",
      "required": [
        "name",
        "can_use_private",
        "can_moderate",
        "can_archive",
        "can_invite",
        "can_manage",
        "can_manage_user"
      ],
      "properties": {
        "can_archive": {
          "description": "User can archive channels",
          "type": "boolean",
          "x-go-name": "CanArchive"
        },
        "can_invite": {
          "description": "User can invite others to private channel or organisation",
          "type": "boolean",
          "x-go-name": "CanInvite"
        },
        "can_manage": {
          "description": "User can manage organisation/channel parameters and data",
          "type": "boolean",
          "x-go-name": "CanManage"
        },
        "can_manage_user": {
          "description": "User can manage other organisation/channel user",
          "type": "boolean",
          "x-go-name": "CanManageUser"
        },
        "can_moderate": {
          "description": "User can moderate channels",
          "type": "boolean",
          "x-go-name": "CanModerate"
        },
        "can_use_private": {
          "description": "User can use private channel",
          "type": "boolean",
          "x-go-name": "CanUsePrivate"
        },
        "id": {
          "description": "id of the role",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDRole"
        },
        "name": {
          "type": "string",
          "x-go-name": "RoleName"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    },
    "User": {
      "description": "An user is an account who have an access to a specific organisation. Each user is unique inside a given organisation, but users are not shared between\norganisations. Required apply only for creation of the object.",
      "type": "object",
      "title": "User object.",
      "required": [
        "username",
        "email",
        "email_verified",
        "deleted",
        "password",
        "last_password_update",
        "failed_attempts",
        "locale",
        "id_role"
      ],
      "properties": {
        "avatar": {
          "description": "Avatar used by user",
          "type": "string",
          "x-go-name": "Avatar"
        },
        "deleted": {
          "description": "User is deleted from organisation but still in database",
          "type": "boolean",
          "x-go-name": "Deleted"
        },
        "email": {
          "description": "User email",
          "type": "string",
          "x-go-name": "Email"
        },
        "email_verified": {
          "description": "State if email was verified",
          "type": "boolean",
          "x-go-name": "EmailVerified"
        },
        "failed_attempts": {
          "description": "Number of attemps failed while loging in",
          "type": "integer",
          "format": "int64",
          "x-go-name": "FailedAttempts"
        },
        "first_name": {
          "description": "First name",
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "description": "id of the user",
          "type": "integer",
          "format": "uint64",
          "minimum": 0,
          "x-go-name": "IDUser"
        },
        "id_role": {
          "description": "Role key of user in the organisation",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "IDRole"
        },
        "last_activity_at": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "LastActivityAt"
        },
        "last_name": {
          "description": "User Lastname",
          "type": "string",
          "x-go-name": "LastName"
        },
        "last_password_update": {
          "description": "Date of the last update of password from user",
          "type": "integer",
          "format": "int64",
          "x-go-name": "LastPasswordUpdate"
        },
        "last_update": {
          "description": "Date of the last update from user",
          "type": "integer",
          "format": "int64",
          "x-go-name": "LastUpdate"
        },
        "locale": {
          "description": "User langage",
          "type": "string",
          "x-go-name": "Locale"
        },
        "nickname": {
          "description": "User nickname",
          "type": "string",
          "x-go-name": "NickName"
        },
        "password": {
          "description": "Encrypted user password",
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "description": "User name",
          "type": "string",
          "maxLength": 64,
          "x-go-name": "Username"
        },
        "web_id": {
          "description": "web id for the user used only for cache and cookie purpose",
          "type": "string",
          "x-go-name": "WebID"
        }
      },
      "x-go-package": "github.com/titouanfreville/popcubeapi/models"
    }
  },
  "responses": {
    "genericError": {
      "description": "AppError Type used to structure error reporting for popcube chat project.",
      "headers": {
        "detailed_error": {
          "type": "string",
          "description": "Detail of error"
        },
        "id": {
          "type": "string",
          "description": "ID for the error"
        },
        "is_oauth": {
          "type": "boolean"
        },
        "message": {
          "type": "string",
          "description": "Error's message"
        },
        "request_id": {
          "type": "string",
          "description": "Id of the request if exist"
        },
        "status_code": {
          "type": "integer",
          "format": "int64",
          "description": "Error's status code"
        }
      }
    }
  }
}