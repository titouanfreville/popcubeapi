{
  "router": {
    "middlewares": [
      {
        "pkg": "github.com/pressly/chi/middleware",
        "func": "RequestID",
        "comment": "RequestID is a middleware that injects a request ID into the context of each\nrequest. A request ID is a string of the form \"host.example.com/random-0001\",\nwhere \"random\" is a base62 random string that uniquely identifies this go\nprocess, and where the last number is an atomically incremented request\ncounter.\n",
        "file": "github.com/pressly/chi/middleware/request_id.go",
        "line": 63
      },
      {
        "pkg": "github.com/pressly/chi/middleware",
        "func": "RealIP",
        "comment": "RealIP is a middleware that sets a http.Request's RemoteAddr to the results\nof parsing either the X-Forwarded-For header or the X-Real-IP header (in that\norder).\n\nThis middleware should be inserted fairly early in the middleware stack to\nensure that subsequent layers (e.g., request loggers) which examine the\nRemoteAddr will see the intended value.\n\nYou should only use this middleware if you can trust the headers passed to\nyou (in particular, the two headers this middleware uses), for example\nbecause you have placed a reverse proxy like HAProxy or nginx in front of\nGoji. If your reverse proxies are configured to pass along arbitrary header\nvalues from the client, or if you use this middleware without a reverse\nproxy, malicious clients will be able to make you very sad (or, depending on\nhow you're using RemoteAddr, vulnerable to an attack of some sort).\n",
        "file": "github.com/pressly/chi/middleware/realip.go",
        "line": 29
      },
      {
        "pkg": "github.com/pressly/chi/middleware",
        "func": "Logger",
        "comment": "Logger is a middleware that logs the start and end of each request, along\nwith some useful data about what was requested, what the response status was,\nand how long it took to return. When standard output is a TTY, Logger will\nprint in color, otherwise it will print in black and white. Logger prints a\nrequest ID if one is provided.\n\nAlternatively, look at https://github.com/pressly/lg and the `lg.RequestLogger`\nmiddleware pkg.\n",
        "file": "github.com/pressly/chi/middleware/logger.go",
        "line": 26
      },
      {
        "pkg": "github.com/pressly/chi/middleware",
        "func": "Recoverer",
        "comment": "Recoverer is a middleware that recovers from panics, logs the panic (and a\nbacktrace), and returns a HTTP 500 (Internal Server Error) status if\npossible. Recoverer prints a request ID if one is provided.\n\nAlternatively, look at https://github.com/pressly/lg middleware pkgs.\n",
        "file": "github.com/pressly/chi/middleware/recoverer.go",
        "line": 16
      },
      {
        "pkg": "github.com/pressly/chi/middleware",
        "func": "StripSlashes",
        "comment": "StripSlashes is a middleware that will match request paths with a trailing\nslash, strip it from the path and continue routing through the mux, if a route\nmatches, then it will serve the handler.\n",
        "file": "github.com/pressly/chi/middleware/strip.go",
        "line": 12
      },
      {
        "pkg": "github.com/pressly/chi/middleware",
        "func": "Timeout.func1",
        "comment": "",
        "file": "github.com/pressly/chi/middleware/timeout.go",
        "line": 33,
        "anonymous": true
      },
      {
        "pkg": "github.com/pressly/chi/middleware",
        "func": "Heartbeat.func1",
        "comment": "",
        "file": "github.com/pressly/chi/middleware/heartbeat.go",
        "line": 13,
        "anonymous": true
      },
      {
        "pkg": "github.com/pressly/chi/middleware",
        "func": "CloseNotify",
        "comment": "CloseNotify is a middleware that cancels ctx when the underlying\nconnection has gone away. It can be used to cancel long operations\non the server when the client disconnects before the response is ready.\n\nNote: this behaviour is standard in Go 1.8+, so the middleware does nothing\non 1.8+ and exists just for backwards compatibility.\n",
        "file": "github.com/pressly/chi/middleware/closenotify17.go",
        "line": 16
      }
    ],
    "routes": {
      "/": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "github.com/titouanfreville/popcubeapi/api",
            "func": "basicRoutes.func1",
            "comment": "swagger:route GET / Test hello\n\nHello World\n\n\tResponses:\n   200: generalOk\n\t  default: genericError\n",
            "file": "github.com/titouanfreville/popcubeapi/api/api.go",
            "line": 103,
            "anonymous": true
          }
        }
      },
      "/avatar": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllAvatar",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                  "line": 149
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newAvatar",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                  "line": 186
                }
              }
            },
            "/:avatarID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "avatarContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                    "line": 133
                  }
                ],
                "routes": {
                  "/delete": {
                    "handlers": {
                      "DELETE": {
                        "middlewares": [],
                        "method": "DELETE",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "deleteAvatar",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                        "line": 239
                      }
                    }
                  },
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateAvatar",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                        "line": 212
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllAvatar",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                  "line": 149
                }
              }
            },
            "/link": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:avatarLink": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "avatarContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                          "line": 133
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getAvatarFromLink",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                              "line": 173
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/name": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:avatarName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "avatarContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                          "line": 133
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getAvatarFromName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                              "line": 160
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newAvatar",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
                  "line": 186
                }
              }
            }
          }
        }
      },
      "/channel": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllChannel",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                  "line": 170
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newChannel",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                  "line": 224
                }
              }
            },
            "/:channelID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "channelContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                    "line": 154
                  }
                ],
                "routes": {
                  "/delete": {
                    "handlers": {
                      "DELETE": {
                        "middlewares": [],
                        "method": "DELETE",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "deleteChannel",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                        "line": 277
                      }
                    }
                  },
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateChannel",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                        "line": 250
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllChannel",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                  "line": 170
                }
              }
            },
            "/name": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:channelName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "channelContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                          "line": 154
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getChannelFromName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                              "line": 206
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newChannel",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                  "line": 224
                }
              }
            },
            "/private": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getPrivateChannel",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                  "line": 194
                }
              }
            },
            "/public": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getPublicChannel",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                  "line": 182
                }
              }
            },
            "/type": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:channelType": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "channelContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                          "line": 154
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getChannelFromType",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/channel_route.go",
                              "line": 215
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/emoji": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllEmoji",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                  "line": 167
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newEmoji",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                  "line": 206
                }
              }
            },
            "/:emojiID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "emojiContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                    "line": 149
                  }
                ],
                "routes": {
                  "/delete": {
                    "handlers": {
                      "DELETE": {
                        "middlewares": [],
                        "method": "DELETE",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "deleteEmoji",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                        "line": 259
                      }
                    }
                  },
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateEmoji",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                        "line": 232
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllEmoji",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                  "line": 167
                }
              }
            },
            "/link": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:emojiLink": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "emojiContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                          "line": 149
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getEmojiFromLink",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                              "line": 197
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/name": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:emojiName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "emojiContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                          "line": 149
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getEmojiFromName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                              "line": 179
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newEmoji",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                  "line": 206
                }
              }
            },
            "/shortcut": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:emojiShortcut": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "emojiContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                          "line": 149
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getEmojiFromShortcut",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/emojis_route.go",
                              "line": 188
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/folder": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllFolder",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                  "line": 179
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newFolder",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                  "line": 240
                }
              }
            },
            "/:folderID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "folderContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                    "line": 161
                  }
                ],
                "routes": {
                  "/delete": {
                    "handlers": {
                      "DELETE": {
                        "middlewares": [],
                        "method": "DELETE",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "deleteFolder",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                        "line": 293
                      }
                    }
                  },
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateFolder",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                        "line": 266
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllFolder",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                  "line": 179
                }
              }
            },
            "/link": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:folderLink": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "folderContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                          "line": 161
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getFolderFromLink",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                              "line": 209
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/message": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getFolderFromMessage",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                  "line": 218
                }
              }
            },
            "/name": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:folderName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "folderContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                          "line": 161
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getFolderFromName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                              "line": 191
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newFolder",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                  "line": 240
                }
              }
            },
            "/type": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:folderType": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "folderContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                          "line": 161
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getFolderFromType",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/folder_route.go",
                              "line": 200
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/heartbeat": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "github.com/titouanfreville/popcubeapi/api",
            "func": "basicRoutes.func3",
            "comment": "",
            "file": "github.com/titouanfreville/popcubeapi/api/api.go",
            "line": 118,
            "anonymous": true
          }
        }
      },
      "/login": {
        "handlers": {
          "POST": {
            "middlewares": [],
            "method": "POST",
            "pkg": "github.com/titouanfreville/popcubeapi/api",
            "func": "loginMiddleware",
            "comment": "loginMiddleware login funcion providing user \u0026\u0026 jwt auth token\n",
            "file": "github.com/titouanfreville/popcubeapi/api/api.go",
            "line": 146
          }
        }
      },
      "/message": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllMessage",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                  "line": 154
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newMessage",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                  "line": 219
                }
              }
            },
            "/:messageID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "messageContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                    "line": 140
                  }
                ],
                "routes": {
                  "/delete": {
                    "handlers": {
                      "DELETE": {
                        "middlewares": [],
                        "method": "DELETE",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "deleteMessageFunction",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                        "line": 272
                      }
                    }
                  },
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateMessage",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                        "line": 245
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllMessage",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                  "line": 154
                }
              }
            },
            "/channel": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getMessageFromChannel",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                  "line": 197
                }
              }
            },
            "/creator": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getMessageFromUser",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                  "line": 175
                }
              }
            },
            "/date": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:messageDate": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "messageContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                          "line": 140
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getMessageFromDate",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                              "line": 166
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newMessage",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/message_route.go",
                  "line": 219
                }
              }
            }
          }
        }
      },
      "/organisation": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllOrganisation",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/organisation_route.go",
                  "line": 98
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newOrganisation",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/organisation_route.go",
                  "line": 110
                }
              }
            },
            "/:organisationID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "organisationContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/organisation_route.go",
                    "line": 86
                  }
                ],
                "routes": {
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateOrganisation",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/organisation_route.go",
                        "line": 136
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllOrganisation",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/organisation_route.go",
                  "line": 98
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newOrganisation",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/organisation_route.go",
                  "line": 110
                }
              }
            }
          }
        }
      },
      "/panic": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "github.com/titouanfreville/popcubeapi/api",
            "func": "basicRoutes.func4",
            "comment": "swagger:route GET /panic Test panic\n\nShould result in 500\n\nTest panic cautching\n\n\tResponses:\n   500: genericError\n\t  default: genericError\n",
            "file": "github.com/titouanfreville/popcubeapi/api/api.go",
            "line": 128,
            "anonymous": true
          }
        }
      },
      "/parameter": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllParameter",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/parameter_route.go",
                  "line": 99
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newParameter",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/parameter_route.go",
                  "line": 111
                }
              }
            },
            "/:parameterID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "parameterContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/parameter_route.go",
                    "line": 87
                  }
                ],
                "routes": {
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateParameter",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/parameter_route.go",
                        "line": 137
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllParameter",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/parameter_route.go",
                  "line": 99
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newParameter",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/parameter_route.go",
                  "line": 111
                }
              }
            }
          }
        }
      },
      "/ping": {
        "handlers": {
          "GET": {
            "middlewares": [],
            "method": "GET",
            "pkg": "github.com/titouanfreville/popcubeapi/api",
            "func": "basicRoutes.func2",
            "comment": "swagger:route GET /ping Test ping\n\nPong\n\nTest api ping\n\n\tResponses:\n   200: generalOk\n\t  default: genericError\n",
            "file": "github.com/titouanfreville/popcubeapi/api/api.go",
            "line": 115,
            "anonymous": true
          }
        }
      },
      "/role": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllRole",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                  "line": 140
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newRole",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                  "line": 183
                }
              }
            },
            "/:roleID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "roleContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                    "line": 126
                  }
                ],
                "routes": {
                  "/delete": {
                    "handlers": {
                      "DELETE": {
                        "middlewares": [],
                        "method": "DELETE",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "deleteRole",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                        "line": 236
                      }
                    }
                  },
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateRole",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                        "line": 209
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllRole",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                  "line": 140
                }
              }
            },
            "/name": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:roleName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "roleContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                          "line": 126
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getRoleFromName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                              "line": 152
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newRole",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                  "line": 183
                }
              }
            },
            "/rights": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getRoleFromRight",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/role_route.go",
                  "line": 161
                }
              }
            }
          }
        }
      },
      "/user": {
        "router": {
          "middlewares": [
            {
              "pkg": "",
              "func": "github.com/goware/jwtauth.(*JwtAuth).Verifier-fm",
              "comment": "",
              "file": "github.com/titouanfreville/popcubeapi/api/avatar_route.go",
              "line": 23,
              "unresolvable": true
            },
            {
              "pkg": "github.com/goware/jwtauth",
              "func": "Authenticator",
              "comment": "Authenticator is a default authentication middleware to enforce access following\nthe Verifier middleware. The Authenticator sends a 401 Unauthorized response for\nall unverified tokens and passes the good ones through. It's just fine until you\ndecide to write something similar and customize your client response.\n",
              "file": "github.com/goware/jwtauth/jwtauth.go",
              "line": 196
            }
          ],
          "routes": {
            "/": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllUser",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                  "line": 233
                },
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newUser",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                  "line": 333
                }
              }
            },
            "/:userID": {
              "router": {
                "middlewares": [
                  {
                    "pkg": "github.com/titouanfreville/popcubeapi/api",
                    "func": "userContext",
                    "comment": "",
                    "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                    "line": 209
                  }
                ],
                "routes": {
                  "/delete": {
                    "handlers": {
                      "DELETE": {
                        "middlewares": [],
                        "method": "DELETE",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "deleteUser",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                        "line": 386
                      }
                    }
                  },
                  "/update": {
                    "handlers": {
                      "PUT": {
                        "middlewares": [],
                        "method": "PUT",
                        "pkg": "github.com/titouanfreville/popcubeapi/api",
                        "func": "updateUser",
                        "comment": "",
                        "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                        "line": 359
                      }
                    }
                  }
                }
              }
            },
            "/all": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getAllUser",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                  "line": 233
                }
              }
            },
            "/date": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getOrderedByDate",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                  "line": 302
                }
              }
            },
            "/deleted": {
              "handlers": {
                "GET": {
                  "middlewares": [],
                  "method": "GET",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getDeletedUser",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                  "line": 245
                }
              }
            },
            "/email": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:userEmail": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "userContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                          "line": 209
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getUserFromEmail",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                              "line": 293
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/firstname": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:firstName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "userContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                          "line": 209
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getUserFromFirstName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                              "line": 275
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/lastname": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:lastName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "userContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                          "line": 209
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getUserFromLastName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                              "line": 284
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/new": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "newUser",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                  "line": 333
                }
              }
            },
            "/nickname": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:nickName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "userContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                          "line": 209
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getUserFromNickName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                              "line": 266
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/role": {
              "handlers": {
                "POST": {
                  "middlewares": [],
                  "method": "POST",
                  "pkg": "github.com/titouanfreville/popcubeapi/api",
                  "func": "getUserFromRole",
                  "comment": "",
                  "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                  "line": 311
                }
              }
            },
            "/username": {
              "router": {
                "middlewares": [],
                "routes": {
                  "/:userName": {
                    "router": {
                      "middlewares": [
                        {
                          "pkg": "github.com/titouanfreville/popcubeapi/api",
                          "func": "userContext",
                          "comment": "",
                          "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                          "line": 209
                        }
                      ],
                      "routes": {
                        "/": {
                          "handlers": {
                            "GET": {
                              "middlewares": [],
                              "method": "GET",
                              "pkg": "github.com/titouanfreville/popcubeapi/api",
                              "func": "getUserFromName",
                              "comment": "",
                              "file": "github.com/titouanfreville/popcubeapi/api/user_route.go",
                              "line": 257
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}